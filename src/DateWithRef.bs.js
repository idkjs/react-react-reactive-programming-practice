// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactReact = require("@denommus/react-react/src/reactReact.bs.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var React$ReactFrp = require("react-frp/src/react.js");

function json_of_date(d) {
  return new Date(d).toISOString();
}

function date_of_json(json) {
  return new Date(Json_decode.string(json)).valueOf();
}

function getDate(param) {
  var d = Date.now();
  return Json_decode.string(new Date(d).toISOString());
}

var counter = /* record */[/* contents */0];

var d = Date.now();

var date = /* record */[/* contents */Json_decode.string(new Date(d).toISOString())];

console.log("date_ref", date);

var match = React$ReactFrp.S[/* create */1](undefined, date[0]);

var dateF = match[1];

var dateS = match[0];

function timeIncrement(param) {
  counter[0] = counter[0] + 1 | 0;
  var d = Date.now();
  date[0] = Json_decode.string(new Date(d).toISOString());
  return Curry._2(dateF, undefined, date[0]);
}

var timerId = setInterval(timeIncrement, 1000);

function vdomS(param) {
  return React$ReactFrp.S[/* map */10]((function (param, param$1) {
                return false;
              }), (function (date) {
                var d = Date.now();
                var currentTime = Json_decode.string(new Date(d).toISOString());
                var message = "Today\'s date is " + (String(date) + " !");
                var currentTimeMessage = "Today\'s date is " + (String(currentTime) + " !");
                return React.createElement(React.Fragment, undefined, React.createElement("div", undefined, message), React.createElement("div", undefined, currentTimeMessage));
              }), dateS);
}

function DateWithRef(Props) {
  return ReactReact.componentFromSignal(vdomS, /* () */0);
}

var make = DateWithRef;

exports.json_of_date = json_of_date;
exports.date_of_json = date_of_json;
exports.getDate = getDate;
exports.counter = counter;
exports.date = date;
exports.dateS = dateS;
exports.dateF = dateF;
exports.timeIncrement = timeIncrement;
exports.timerId = timerId;
exports.vdomS = vdomS;
exports.make = make;
/* date Not a pure module */
